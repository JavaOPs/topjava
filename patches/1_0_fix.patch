Index: src/main/java/ru/javawebinar/topjava/util/UserMealsUtil.java
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/UserMealsUtil.java	(revision 127308b47336065c7b6addceb2a9c5057f350221)
+++ src/main/java/ru/javawebinar/topjava/util/UserMealsUtil.java	(revision 127308b47336065c7b6addceb2a9c5057f350221)
@@ -1,31 +0,0 @@
-package ru.javawebinar.topjava.util;
-
-import ru.javawebinar.topjava.model.UserMeal;
-import ru.javawebinar.topjava.model.UserMealWithExceed;
-
-import java.time.LocalDateTime;
-import java.time.LocalTime;
-import java.time.Month;
-import java.util.Arrays;
-import java.util.List;
-
-public class UserMealsUtil {
-    public static void main(String[] args) {
-        List<UserMeal> mealList = Arrays.asList(
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 30,10,0), "Завтрак", 500),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 30,13,0), "Обед", 1000),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 30,20,0), "Ужин", 500),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 31,10,0), "Завтрак", 1000),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 31,13,0), "Обед", 500),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 31,20,0), "Ужин", 510)
-        );
-        getFilteredWithExceeded(mealList, LocalTime.of(7, 0), LocalTime.of(12,0), 2000);
-//        .toLocalDate();
-//        .toLocalTime();
-    }
-
-    public static List<UserMealWithExceed>  getFilteredWithExceeded(List<UserMeal> mealList, LocalTime startTime, LocalTime endTime, int caloriesPerDay) {
-        // TODO return filtered list with correctly exceeded field
-        return null;
-    }
-}
Index: src/main/java/ru/javawebinar/topjava/model/UserMeal.java
===================================================================
--- src/main/java/ru/javawebinar/topjava/model/UserMeal.java	(revision 127308b47336065c7b6addceb2a9c5057f350221)
+++ src/main/java/ru/javawebinar/topjava/model/Meal.java	(date 1570030209818)
@@ -2,14 +2,14 @@
 
 import java.time.LocalDateTime;
 
-public class UserMeal {
+public class Meal {
     private final LocalDateTime dateTime;
 
     private final String description;
 
     private final int calories;
 
-    public UserMeal(LocalDateTime dateTime, String description, int calories) {
+    public Meal(LocalDateTime dateTime, String description, int calories) {
         this.dateTime = dateTime;
         this.description = description;
         this.calories = calories;
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision 127308b47336065c7b6addceb2a9c5057f350221)
+++ pom.xml	(date 1570030209857)
@@ -24,7 +24,7 @@
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-compiler-plugin</artifactId>
-                <version>3.7.0</version>
+                <version>3.8.1</version>
                 <configuration>
                     <source>${java.version}</source>
                     <target>${java.version}</target>
Index: src/main/java/ru/javawebinar/topjava/model/UserMealWithExceed.java
===================================================================
--- src/main/java/ru/javawebinar/topjava/model/UserMealWithExceed.java	(revision 127308b47336065c7b6addceb2a9c5057f350221)
+++ src/main/java/ru/javawebinar/topjava/model/MealTo.java	(date 1570030209835)
@@ -2,19 +2,19 @@
 
 import java.time.LocalDateTime;
 
-public class UserMealWithExceed {
+public class MealTo {
     private final LocalDateTime dateTime;
 
     private final String description;
 
     private final int calories;
 
-    private final boolean exceed;
+    private final boolean excess;
 
-    public UserMealWithExceed(LocalDateTime dateTime, String description, int calories, boolean exceed) {
+    public MealTo(LocalDateTime dateTime, String description, int calories, boolean excess) {
         this.dateTime = dateTime;
         this.description = description;
         this.calories = calories;
-        this.exceed = exceed;
+        this.excess = excess;
     }
 }
Index: src/main/java/ru/javawebinar/topjava/util/MealsUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/MealsUtil.java	(date 1570030280760)
+++ src/main/java/ru/javawebinar/topjava/util/MealsUtil.java	(date 1570030280760)
@@ -0,0 +1,31 @@
+package ru.javawebinar.topjava.util;
+
+import ru.javawebinar.topjava.model.Meal;
+import ru.javawebinar.topjava.model.MealTo;
+
+import java.time.LocalDateTime;
+import java.time.LocalTime;
+import java.time.Month;
+import java.util.Arrays;
+import java.util.List;
+
+public class MealsUtil {
+    public static void main(String[] args) {
+        List<Meal> meals = Arrays.asList(
+                new Meal(LocalDateTime.of(2015, Month.MAY, 30, 10, 0), "Завтрак", 500),
+                new Meal(LocalDateTime.of(2015, Month.MAY, 30, 13, 0), "Обед", 1000),
+                new Meal(LocalDateTime.of(2015, Month.MAY, 30, 20, 0), "Ужин", 500),
+                new Meal(LocalDateTime.of(2015, Month.MAY, 31, 10, 0), "Завтрак", 1000),
+                new Meal(LocalDateTime.of(2015, Month.MAY, 31, 13, 0), "Обед", 500),
+                new Meal(LocalDateTime.of(2015, Month.MAY, 31, 20, 0), "Ужин", 510)
+        );
+        getFilteredWithExcess(meals, LocalTime.of(7, 0), LocalTime.of(12, 0), 2000);
+//        .toLocalDate();
+//        .toLocalTime();
+    }
+
+    public static List<MealTo> getFilteredWithExcess(List<Meal> meals, LocalTime startTime, LocalTime endTime, int caloriesPerDay) {
+        // TODO return filtered list with correctly excess field
+        return null;
+    }
+}
\ No newline at end of file
